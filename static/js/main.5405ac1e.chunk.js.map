{"version":3,"sources":["components/AppBarLogo/AppBarLogo.js","components/AuthNav/AuthNav.js","components/UserMenu/UserMenu.js","Navigation/Navigation.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/ContactContainer/ContactContainer.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","utils/themes.js","index.js","redux/auth/auth-selectors.js","redux/auth/auth-operations.js","components/ContactsMenu/ContactsMenu.js"],"names":["AppBarLogo","history","useHistory","location","useLocation","Typography","component","sx","flexGrow","color","cursor","onClick","push","state","from","AuthNav","to","mr","UserMenu","name","useSelector","authSelectors","getUserName","dispatch","useDispatch","Button","type","variant","e","preventDefault","authOperations","logout","Navigation","isLogged","getIsLoggedIn","AppBar","position","Toolbar","ContactsMenu","getContacts","contacts","filter","entities","toLowerCase","includes","getAllContact","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","fetchContact","a","actions","axios","get","then","data","catch","error","toast","message","connect","onSubmit","stateName","number","user","id","shortid","generate","post","success","operations","useState","setName","setNumber","reset","handleChange","target","value","FormGroup","find","contact","warning","TextField","label","pattern","title","required","onChange","width","mt","contactActions","onDelete","userId","delete","useEffect","fontSize","textAlign","mb","List","map","ListItem","justifyContent","ContactContainer","Container","display","flexDirection","alignItems","length","PrivateRoute","children","redirectTo","props","PublicRoute","restricted","showRedirect","HomePage","lazy","Login","Register","App","console","log","fetchCurrentUser","fallback","exact","path","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","createReducer","_","payload","isLoading","combineReducers","authSlice","createSlice","initialState","email","token","isLoggedIn","extraReducers","register","fulfilled","login","contactPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducers","contactReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","persistor","persistStore","theme","createTheme","palette","primary","light","main","dark","contrastText","secondary","componentTheme","components","MuiAppBar","styleOverrides","root","MuiTypography","MuiButton","ReactDOM","render","StrictMode","ThemeProvider","loading","document","getElementById","defaults","baseURL","headers","common","Authorization","createAsyncThunk","credentials","thunkAPI","getState","persistToken","rejectWithValue"],"mappings":"yRAsBeA,EAnBI,WACjB,IAAMC,EAAUC,cACVC,EAAWC,cAMjB,OACE,cAACC,EAAA,EAAD,CACEC,UAAU,KACVC,GAAI,CAAEC,SAAU,EAAGC,MAAO,uBAAwBC,OAAQ,WAC1DC,QARa,WAAO,IAAD,IACrBV,EAAQW,KAAR,iBAAaT,QAAb,IAAaA,GAAb,UAAaA,EAAUU,aAAvB,aAAa,EAAiBC,YAA9B,QAAsC,MAItC,wB,QCMWC,EAfC,kBACd,qCACE,cAAC,IAAD,CAAMC,GAAG,SAAT,SACE,cAACX,EAAA,EAAD,CAAYC,UAAU,OAAOG,MAAM,uBAAuBF,GAAI,CAAEU,GAAI,GAApE,qBAIF,cAAC,IAAD,CAAMD,GAAG,YAAT,SACE,cAACX,EAAA,EAAD,CAAYC,UAAU,OAAOG,MAAM,uBAAnC,gC,iCCeSS,EArBE,WACf,IAAMC,EAAOC,YAAYC,IAAcC,aACjCC,EAAWC,cAOjB,OACE,qCACE,eAACnB,EAAA,EAAD,CAAYE,GAAI,CAAEE,MAAO,uBAAwBQ,GAAI,GAArD,qBACWE,EADX,OAGA,cAACM,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,YAAYhB,QAVxB,SAACiB,GACrBA,EAAEC,iBACFN,EAASO,IAAeC,WAQtB,sB,kBCWSC,EArBI,WACjB,IAAMC,EAAWb,YAAYC,IAAca,eAE3C,OACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAAC,EAAD,IACCJ,EACC,qCACG,IACD,cAACK,EAAA,EAAD,IACA,cAAC,EAAD,IAAa,OAGf,cAAC,EAAD,UCvBGC,G,cAAc,SAAC1B,GAC1B,MAA6BA,EAAM2B,SAA3BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAEhB,MAAkB,KAAXD,EACHC,EACAA,EAASD,QAAO,qBAAGtB,KACZwB,cAAcC,SAASH,EAAOE,oBAI9BE,EAAgB,SAAChC,GAAD,OAAWA,EAAM2B,SAASE,U,2ECMxC,GACbI,oBAf0BC,YAAa,gCAgBvCC,oBAf0BD,YAAa,gCAgBvCE,kBAfwBF,YAAa,8BAgBrCG,kBAdwBH,YAAa,8BAerCI,kBAdwBJ,YAAa,8BAerCK,gBAdsBL,YAAa,4BAgBnCM,qBAd2BN,YAAa,iCAexCO,qBAd2BP,YAAa,iCAexCQ,mBAdyBR,YAAa,+BAetCS,aAbmBT,YAAa,0BCNrBU,EAAe,yDAAM,WAAOlC,GAAP,SAAAmC,EAAA,sDAChCnC,EAASoC,EAAQb,uBAEjBc,IACGC,IADH,aAEGC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACP,OAAOxC,EAASoC,EAAQX,oBAAoBe,OAE7CC,OAAM,SAACC,GAEN,OADAC,IAAMD,MAAM,0CACL1C,EAASoC,EAAQV,kBAAkBgB,EAAME,aAVpB,2CAAN,uD,kBCuF5B,IAKeC,cAAQ,MALI,SAAC7C,GAAD,MAAe,CACxC8C,SAAU,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,OAAd,OACRhD,ED1EF,SAAC,GAAD,IAAG+C,EAAH,EAAGA,UAAWC,EAAd,EAAcA,OAAd,OACA,SAAChD,GACC,IAAMiD,EAAO,CAAEC,GAAIC,IAAQC,WAAYxD,KAAMmD,EAAWC,UAExDhD,EAASoC,EAAQT,qBAEjBU,IACGgB,KADH,YACqBJ,GAClBV,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAEP,OADAG,IAAMW,QAAQ,+BACPtD,EAASoC,EAAQR,kBAAkBY,OAE3CC,OAAM,SAACC,GAEN,OADAC,IAAMD,MAAM,0CACL1C,EAASoC,EAAQP,gBAAgBa,EAAME,cC4DzCW,CAAuB,CAAER,YAAWC,gBAGlCH,EAzFf,YAAoC,IAAbC,EAAY,EAAZA,SACrB,EAA6BU,mBAAS,IAAtC,mBAAOT,EAAP,KAAkBU,EAAlB,KACA,EAA4BD,mBAAS,IAArC,mBAAOR,EAAP,KAAeU,EAAf,KACMzC,EAAWpB,YAAYyB,GAEvBqC,EAAQ,WACZF,EAAQ,IACRC,EAAU,KAGNE,EAAe,SAACvD,GACpB,MAAwBA,EAAEwD,OAAlBjE,EAAR,EAAQA,KAAMkE,EAAd,EAAcA,MAED,IAATlE,IACW,SAATA,EACF6D,EAAQK,GACU,WAATlE,GACT8D,EAAUI,KAoBhB,OACE,cAACC,EAAA,EAAD,UACE,uBAAMjB,SAjBW,SAACzC,GACpBA,EAAEC,iBAGCW,EAAS+C,MACR,SAACC,GAAD,OAAaA,EAAQrE,OAASmD,GAAakB,EAAQjB,SAAWA,KAKhEL,IAAMuB,QAAQ,2BAFdpB,EAAS,CAAEC,YAAWC,WAIxBW,KAKE,UACE,cAACQ,EAAA,EAAD,CACEC,MAAM,OACNjE,KAAK,OACLP,KAAK,OACLyE,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRT,MAAOf,EACPyB,SAAUZ,EACVxD,QAAQ,WACRpB,GAAI,CAAEyF,MAAO,KAGf,cAACN,EAAA,EAAD,CACEC,MAAM,SACNjE,KAAK,MACLP,KAAK,SACLyE,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRT,MAAOd,EACPwB,SAAUZ,EACVxD,QAAQ,WACRpB,GAAI,CAAEyF,MAAO,KAGf,cAACvE,EAAA,EAAD,CACEC,KAAK,SACL2C,SAAUa,EACVvD,QAAQ,YACRpB,GAAI,CAAE0F,GAAI,GAJZ,iCClDO7B,eARS,SAACvD,GAAD,MAAY,CAClCwE,MAAOxE,EAAM2B,SAASC,WAGG,SAAClB,GAAD,MAAe,CACxCwE,SAAU,SAACnE,GAAD,OAAOL,EAAS2E,EAAe1C,aAAa5B,EAAEwD,OAAOC,YAGlDjB,EAtBA,SAAC,GAAyB,IAAvBiB,EAAsB,EAAtBA,MAAOU,EAAe,EAAfA,SACvB,OACE,cAACL,EAAA,EAAD,CACEC,MAAM,wBACNjE,KAAK,OACLP,KAAK,SACLkE,MAAOA,EACPU,SAAUA,EACVpE,QAAQ,WACRpB,GAAI,CAAE0F,GAAI,EAAGD,MAAO,Q,kBC2C1B,IAQe5B,eARS,SAACvD,GAAD,MAAY,CAClCwE,MAAOxE,EAAM2B,SAASE,aAGG,SAACnB,GAAD,MAAe,CACxC4E,SAAU,SAAC1B,GAAD,OAAQlD,GHrBU6E,EGqBwB3B,EHrBb,SAAClD,GACxCA,EAASoC,EAAQN,wBAEjBO,IACGyC,OADH,oBACuBD,IACpBtC,MAAK,WAEJ,OADAI,IAAMW,QAAQ,iCACPtD,EAASoC,EAAQL,qBAAqB8C,OAE9CpC,OAAM,SAACC,GAEN,OADAC,IAAMD,MAAM,4CACL1C,EAASoC,EAAQJ,mBAAmBU,UAXpB,IAACmC,MGwBfhC,EArDf,YAAoC,IAAb+B,EAAY,EAAZA,SACfX,EAAUpE,YAAYmB,GACtBhB,EAAWC,cAMjB,OAJA8E,qBAAU,WACR/E,EAASuD,OACR,CAACvD,IAGF,qCACE,cAAClB,EAAA,EAAD,CACEC,UAAU,KACVC,GAAI,CAAEgG,SAAU,GAAIC,UAAW,SAAUC,GAAI,EAAGR,GAAI,GAFtD,sBAOA,cAACS,EAAA,EAAD,UACGlB,EAAQmB,KAAI,gBAAGxF,EAAH,EAAGA,KAAMoD,EAAT,EAASA,OAAQE,EAAjB,EAAiBA,GAAjB,OACX,eAACmC,EAAA,EAAD,CAEErG,GAAI,CACFsG,eAAgB,gBAChBb,MAAO,KAJX,UAOG7E,EAPH,IAQE,cAACd,EAAA,EAAD,CAAYC,UAAU,OAAOC,GAAI,CAAEU,GAAI,GAAvC,SACGsD,IAEH,cAAC9C,EAAA,EAAD,CACEC,KAAK,SACLf,QAAS,kBAAMwF,EAAS1B,IACxBhE,MAAM,YACNkB,QAAQ,YAJV,sBAVK+C,IAAQC,uB,SCmBVmC,EAzCU,WACvB,IAAMtE,EAAWpB,YAAYyB,GACvBtB,EAAWC,cAMjB,OAJA8E,qBAAU,WACR/E,EAASuD,OACR,IAGD,eAACiC,EAAA,EAAD,CACExG,GAAI,CACF0F,GAAI,EACJe,QAAS,OACTC,cAAe,SACfC,WAAY,SACZlB,MAAO,KANX,UASuB,IAApBxD,EAAS2E,QACR,cAAC9G,EAAA,EAAD,CACEC,UAAU,KACVC,GAAI,CACF0F,GAAI,EACJQ,GAAI,GAJR,wDAWF,cAAC,EAAD,IACqB,IAApBjE,EAAS2E,QACR,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,W,4CC9BKC,EAVM,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,SAA2C,IAAjCC,kBAAiC,MAApB,IAAoB,EAAZC,EAAY,iBAC3DtF,EAAWb,YAAYC,IAAca,eAE3C,OACE,cAAC,IAAD,2BAAWqF,GAAX,aACGtF,EAAWoF,EAAW,cAAC,IAAD,CAAUrG,GAAIsG,Q,yCCW5BE,EAhBK,SAAC,GAKd,IAJLH,EAII,EAJJA,SAII,IAHJC,kBAGI,MAHS,IAGT,MAFJG,kBAEI,SADDF,EACC,iBAEEG,EADWtG,YAAYC,IAAca,gBACVuF,EAEjC,OACE,cAAC,IAAD,2BAAWF,GAAX,aACGG,EAAe,cAAC,IAAD,CAAU1G,GAAIsG,IAAiBD,MCC/CM,EAAWC,gBAAK,kBAAM,iCACtBC,EAAQD,gBAAK,kBAAM,iCACnBE,EAAWF,gBAAK,kBAAM,iCAmDbG,I,YAAAA,GAjDf,WACE,IAAMxG,EAAWC,cACXgE,EAAUpE,YAAYyB,GAQ5B,OANAmF,QAAQC,IAAuB,IAAnBzC,EAAQ2B,QAEpBb,qBAAU,WACR/E,EAASO,IAAeoG,sBACvB,CAAC3G,IAGF,qCACE,cAAC,EAAD,IAEA,cAAC,WAAD,CAAU4G,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAaC,OAAK,EAACC,KAAK,IAAxB,SACE,cAACV,EAAD,MAEF,cAAC,EAAD,CAAaU,KAAK,SAASf,WAAW,YAAYG,YAAU,EAA5D,SACE,cAACI,EAAD,MAGF,cAAC,EAAD,CAAaQ,KAAK,YAAYZ,YAAU,EAAxC,SACE,cAACK,EAAD,MAGF,cAAC,EAAD,CAAcO,KAAK,YAAYf,WAAW,SAA1C,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAUtG,GAAG,WAGjB,cAAC,IAAD,CACEoB,SAAS,YACTkG,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,Q,2EC3DdnG,GAAWoG,YAAc,IAAD,sBAC3BnF,EAAQX,qBAAsB,SAAC+F,EAAD,YAAMC,WADT,gBAE3BrF,EAAQR,mBAAoB,SAACtC,EAAD,OAAUmI,EAAV,EAAUA,QAAV,OAC3BnI,EAAM0E,MACJ,SAACC,GAAD,OACEA,EAAQrE,OAAS6H,EAAQ7H,MAAQqE,EAAQjB,SAAWyE,EAAQzE,UAE5D1D,EAJJ,uBAKQA,GALR,CAKemI,OARW,gBAS3BrF,EAAQL,sBAAuB,SAACzC,EAAD,OAAUmI,EAAV,EAAUA,QAAV,OAC9BnI,EAAM4B,QAAO,qBAAGgC,KAAgBuE,QAVN,KAaxBvG,GAASqG,YAAc,GAAD,gBACzBnF,EAAQH,cAAe,SAACuF,EAAD,YAAMC,YAG1BC,GAAYH,aAAc,GAAD,sBAC5BnF,EAAQb,qBAAsB,kBAAM,KADR,gBAE5Ba,EAAQX,qBAAsB,kBAAM,KAFR,gBAG5BW,EAAQV,mBAAoB,kBAAM,KAHN,KAMzBgB,GAAQ6E,YAAc,MAAD,sBACxBnF,EAAQb,qBAAsB,SAACiG,EAAD,YAAMC,WADZ,gBAExBrF,EAAQb,qBAAsB,kBAAM,QAFZ,KAKZoG,gBAAgB,CAC7BzG,UACAC,YACAuG,aACAhF,WCDakF,GA1BGC,YAAY,CAC5BjI,KAAM,OACNkI,aARmB,CACnB7E,KAAM,CAAErD,KAAM,KAAMmI,MAAO,MAC3BC,MAAO,KACPC,YAAY,GAMZC,eAAa,sBACV3H,IAAe4H,SAASC,WAAY,SAAC9I,EAAD,GAAyB,IAAfmI,EAAc,EAAdA,QAC7CnI,EAAM2D,KAAOwE,EAAQxE,KACrB3D,EAAM0I,MAAQP,EAAQO,MACtB1I,EAAM2I,YAAa,KAJV,gBAMV1H,IAAe8H,MAAMD,WAAY,SAAC9I,EAAD,GAAyB,IAAfmI,EAAc,EAAdA,QAC1CnI,EAAM2D,KAAOwE,EAAQxE,KACrB3D,EAAM0I,MAAQP,EAAQO,MACtB1I,EAAM2I,YAAa,KATV,gBAWV1H,IAAeC,OAAO4H,WAAY,SAAC9I,GAClCA,EAAM2D,KAAO,CAAErD,KAAM,KAAMmI,MAAO,MAClCzI,EAAM0I,MAAQ,KACd1I,EAAM2I,YAAa,KAdV,gBAgBV1H,IAAeoG,iBAAiByB,WAAY,SAAC9I,EAAD,GAAyB,IAAfmI,EAAc,EAAdA,QACrDnI,EAAM2D,KAAN,eAAkBwE,GAClBnI,EAAM2I,YAAa,KAlBV,MAuBf,QCnBMK,GAAuB,CAC3BC,IAAK,OACLC,aACAC,UAAW,CAAC,UAGDC,GAAQC,YAAe,CAClCC,QAAS,CACPC,KAAMC,aAAeR,GAAsBS,IAC3C9H,SAAU+H,IAEZC,WAAY,SAACC,GAAD,6BACPA,EAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHpD,CAMVC,QAEFC,UAAUC,IAGCC,GAAYC,aAAarB,I,4BCpClCsB,GAAQC,aAAY,CACtBC,QAAS,CACP/J,KAAM,QACNgK,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAKPE,GAAiBR,aAAYD,GAAO,CAC/CU,WAAY,CACVC,UAAW,CACTC,eAAgB,CACdC,KAAM,CACJ3L,MAAO8K,GAAME,QAAQC,QAAQI,gBAKnCO,cAAe,CACbF,eAAgB,CACdC,KAAM,CACJ3L,MAAO8K,GAAME,QAAQC,QAAQC,SAInCW,UAAW,CACTH,eAAgB,CACdC,KAAM,CACJ3L,MAAO8K,GAAME,QAAQC,QAAQI,mBC5BvCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,GAAA,EAAD,CAAenB,MAAOS,GAAtB,SACE,cAAC,IAAD,CAAU/B,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAa0C,QAAS,KAAMtB,UAAWA,GAAvC,SACE,cAAC,IAAD,UACE,cAAC,GAAD,cAMVuB,SAASC,eAAe,U,gCCxB1B,IAGMxL,EAAgB,CACpBa,cAJoB,SAACrB,GAAD,OAAWA,EAAMuJ,KAAKZ,YAK1ClI,YAJkB,SAACT,GAAD,OAAWA,EAAMuJ,KAAK5F,KAAKrD,OAOhCE,O,sFCLfuC,IAAMkJ,SAASC,QAAU,wCAEzB,IAAMxD,EAAQ,SACRA,GACF3F,IAAMkJ,SAASE,QAAQC,OAAOC,cAA9B,iBAAwD3D,IAFtDA,EAAQ,WAKV3F,IAAMkJ,SAASE,QAAQC,OAAOC,cAAgB,IAI5CxD,EAAWyD,YAAiB,gBAAD,uCAAkB,WAAOC,GAAP,iBAAA1J,EAAA,+EAExBE,IAAMgB,KAAK,gBAAiBwI,GAFJ,uBAEvCrJ,EAFuC,EAEvCA,KACRwF,EAAUxF,EAAKwF,OAHgC,kBAIxCxF,GAJwC,yFAAlB,uDAQ3B6F,EAAQuD,YAAiB,aAAD,uCAAe,WAAOC,GAAP,iBAAA1J,EAAA,+EAElBE,IAAMgB,KAAK,eAAgBwI,GAFT,uBAEjCrJ,EAFiC,EAEjCA,KACRwF,EAAUxF,EAAKwF,OAH0B,kBAIlCxF,GAJkC,yFAAf,uDAQxBhC,EAASoL,YAAiB,cAAD,sBAAgB,8BAAAzJ,EAAA,+EAEpBE,IAAMgB,KAAK,iBAFS,uBAEnCb,EAFmC,EAEnCA,KACRwF,IAH2C,kBAIpCxF,GAJoC,0FAQzCmE,EAAmBiF,YACvB,eADuC,uCAEvC,WAAOpE,EAAGsE,GAAV,qBAAA3J,EAAA,yDACQ7C,EAAQwM,EAASC,WAEF,QADfC,EAAe1M,EAAMuJ,KAAKb,OAFlC,uBAIIvB,QAAQC,IAAI,QAJhB,kBAKWoF,EAASG,gBAAgB,IALpC,cAOEjE,EAAUgE,GAPZ,kBAU2B3J,IAAMC,IAAI,kBAVrC,uBAUYE,EAVZ,EAUYA,KAVZ,kBAWWA,GAXX,4FAFuC,yDAkB1B,KACb2F,WACAE,QACA7H,SACAmG,qB,gCC5DF,4CAsBe5F,IAjBM,WACnB,IAAML,EAAWb,YAAYC,IAAca,eAE3C,OACE,cAAC,IAAD,CAAMlB,GAAE,YAAR,SACGiB,EACC,eAAC,IAAD,CAAY3B,UAAU,OAAOG,MAAM,OAAOF,GAAI,CAAEU,GAAI,GAApD,UACG,IADH,iBAKA,cAAC,IAAD,wC","file":"static/js/main.5405ac1e.chunk.js","sourcesContent":["import { useHistory, useLocation } from \"react-router\";\nimport { Typography } from \"@mui/material\";\n\nconst AppBarLogo = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const onGoBack = () => {\n    history.push(location?.state?.from ?? \"/\");\n  };\n\n  return (\n    <Typography\n      component=\"h1\"\n      sx={{ flexGrow: 1, color: \"primary.contrastText\", cursor: \"pointer\" }}\n      onClick={onGoBack}\n    >\n      Phonebook\n    </Typography>\n  );\n};\n\nexport default AppBarLogo;\n","import { Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nconst AuthNav = () => (\n  <>\n    <Link to=\"/login\">\n      <Typography component=\"span\" color=\"primary.contrastText\" sx={{ mr: 2 }}>\n        Login\n      </Typography>\n    </Link>\n    <Link to=\"/register\">\n      <Typography component=\"span\" color=\"primary.contrastText\">\n        Registration\n      </Typography>\n    </Link>\n  </>\n);\n\nexport default AuthNav;\n","import { Button, Typography } from \"@mui/material\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\nimport authOperations from \"../../redux/auth/auth-operations\";\n\nconst UserMenu = () => {\n  const name = useSelector(authSelectors.getUserName);\n  const dispatch = useDispatch();\n\n  const handlerLogout = (e) => {\n    e.preventDefault();\n    dispatch(authOperations.logout());\n  };\n\n  return (\n    <>\n      <Typography sx={{ color: \"primary.contrastText\", mr: 1 }}>\n        Welcome {name}!\n      </Typography>\n      <Button type=\"submit\" variant=\"contained\" onClick={handlerLogout}>\n        Exit\n      </Button>\n    </>\n  );\n};\n\nexport default UserMenu;\n","import { useSelector } from \"react-redux\";\nimport AppBarLogo from \"../components/AppBarLogo/AppBarLogo\";\nimport AuthNav from \"../components/AuthNav/AuthNav\";\nimport ContactsMenu from \"../components/ContactsMenu/ContactsMenu\";\nimport UserMenu from \"../components/UserMenu/UserMenu\";\nimport authSelectors from \"../redux/auth/auth-selectors\";\n\nimport { AppBar, Toolbar } from \"@mui/material\";\n\nconst Navigation = () => {\n  const isLogged = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <AppBarLogo />\n        {isLogged ? (\n          <>\n            {\" \"}\n            <ContactsMenu />\n            <UserMenu />{\" \"}\n          </>\n        ) : (\n          <AuthNav />\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navigation;\n","export const getContacts = (state) => {\n  const { filter, entities } = state.contacts;\n\n  return filter === \"\"\n    ? entities\n    : entities.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase())\n      );\n};\n\nexport const getAllContact = (state) => state.contacts.entities;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nconst fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nconst fetchContactError = createAction(\"contacts/fetchContactError\");\n\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\nconst addContactError = createAction(\"contacts/addContactError\");\n\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\nconst deleteContactError = createAction(\"contacts/deleteContactError\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n};\n","// import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport shortid from \"shortid\";\nimport axios from \"axios\";\nimport actions from \"./contacts-actions\";\n\n//=== have to refactoring with thunk\n\nexport const fetchContact = () => async (dispatch) => {\n  dispatch(actions.fetchContactRequest());\n\n  axios\n    .get(`/contacts`)\n    .then(({ data }) => {\n      return dispatch(actions.fetchContactSuccess(data));\n    })\n    .catch((error) => {\n      toast.error(\"Contact is not added! Something wrong!\");\n      return dispatch(actions.fetchContactError(error.message));\n    });\n};\n\nexport const addContacts =\n  ({ stateName, number }) =>\n  (dispatch) => {\n    const user = { id: shortid.generate(), name: stateName, number };\n\n    dispatch(actions.addContactRequest());\n\n    axios\n      .post(`/contacts`, user)\n      .then(({ data }) => {\n        toast.success(\"Contact successfully added!\");\n        return dispatch(actions.addContactSuccess(data));\n      })\n      .catch((error) => {\n        toast.error(\"Contact is not added! Something wrong!\");\n        return dispatch(actions.addContactError(error.message));\n      });\n  };\n\nexport const deleteContact = (userId) => (dispatch) => {\n  dispatch(actions.deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${userId}`)\n    .then(() => {\n      toast.success(\"Contact successfully deleted!\");\n      return dispatch(actions.deleteContactSuccess(userId));\n    })\n    .catch((error) => {\n      toast.error(\"Contact is not deleted! Something wrong!\");\n      return dispatch(actions.deleteContactError(error));\n    });\n};\n","import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\n//===redux\nimport { connect, useSelector } from \"react-redux\";\nimport * as operations from \"../../redux/contacts/contacts-operations\";\n//===styles\n\nimport { getAllContact } from \"../../redux/contacts/contacts-selectors\";\nimport { FormGroup, TextField, Button } from \"@mui/material\";\n\nfunction ContactForm({ onSubmit }) {\n  const [stateName, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getAllContact);\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name !== 0) {\n      if (name === \"name\") {\n        setName(value);\n      } else if (name === \"number\") {\n        setNumber(value);\n      }\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (\n      !contacts.find(\n        (contact) => contact.name === stateName || contact.number === number\n      )\n    ) {\n      onSubmit({ stateName, number });\n    } else {\n      toast.warning(\"Contact already exists!\");\n    }\n    reset();\n  };\n\n  return (\n    <FormGroup>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={stateName}\n          onChange={handleChange}\n          variant=\"standard\"\n          sx={{ width: 1 }}\n        />\n\n        <TextField\n          label=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n          variant=\"standard\"\n          sx={{ width: 1 }}\n        />\n\n        <Button\n          type=\"submit\"\n          onSubmit={reset}\n          variant=\"contained\"\n          sx={{ mt: 4 }}\n        >\n          Add contact\n        </Button>\n      </form>\n    </FormGroup>\n  );\n}\n\nContactForm.propTypes = {\n  stateName: PropTypes.string,\n  number: PropTypes.string,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: ({ stateName, number }) =>\n    dispatch(operations.addContacts({ stateName, number })), //=== call function with props\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { TextField } from \"@mui/material\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactActions from \"../../redux/contacts/contacts-actions\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <TextField\n      label=\"Find contacts by name\"\n      type=\"text\"\n      name=\"filter\"\n      value={value}\n      onChange={onChange}\n      variant=\"standard\"\n      sx={{ mt: 2, width: 1 }}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { useEffect } from \"react\";\nimport shortid from \"shortid\";\n//=== redux\nimport { connect, useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\n\nimport * as operations from \"../../redux/contacts/contacts-operations\";\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\n\n//=== styles\nimport { Button, List, ListItem, Typography } from \"@mui/material\";\n\nfunction ContactList({ onDelete }) {\n  const contact = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.fetchContact());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Typography\n        component=\"h2\"\n        sx={{ fontSize: 24, textAlign: \"center\", mb: 2, mt: 2 }}\n      >\n        Contacts\n      </Typography>\n\n      <List>\n        {contact.map(({ name, number, id }) => (\n          <ListItem\n            key={shortid.generate()}\n            sx={{\n              justifyContent: \"space-between\",\n              width: 320,\n            }}\n          >\n            {name}:\n            <Typography component=\"span\" sx={{ mr: 1 }}>\n              {number}\n            </Typography>\n            <Button\n              type=\"button\"\n              onClick={() => onDelete(id)}\n              color=\"secondary\"\n              variant=\"contained\"\n            >\n              Delete\n            </Button>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.entities,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) => dispatch(operations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import ContactForm from \"../ContactForm/ContactForm\";\nimport Filter from \"../Filter/Filter\";\nimport ContactList from \"../ContactList/ContactList\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllContact } from \"../../redux/contacts/contacts-selectors\";\nimport * as operations from \"../../redux/contacts/contacts-operations\";\nimport { Container, Typography } from \"@mui/material\";\nimport { useEffect } from \"react\";\n\nconst ContactContainer = () => {\n  const contacts = useSelector(getAllContact);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(operations.fetchContact());\n  }, []);\n\n  return (\n    <Container\n      sx={{\n        mt: 4,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        width: 350,\n      }}\n    >\n      {contacts.length === 0 && (\n        <Typography\n          component=\"h3\"\n          sx={{\n            mt: 2,\n            mb: 2,\n          }}\n        >\n          There are no contacts here yet, let's add?\n        </Typography>\n      )}\n\n      <ContactForm />\n      {contacts.length !== 0 && (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default ContactContainer;\n","import { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\n\nconst PrivateRoute = ({ children, redirectTo = \"/\", ...props }) => {\n  const isLogged = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <Route {...props}>\n      {isLogged ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n};\n\nexport default PrivateRoute;\n","import { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\n\nconst PublicRoute = ({\n  children,\n  redirectTo = \"/\",\n  restricted = false,\n  ...props\n}) => {\n  const isLogged = useSelector(authSelectors.getIsLoggedIn);\n  const showRedirect = isLogged && restricted;\n\n  return (\n    <Route {...props}>\n      {showRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n};\n\nexport default PublicRoute;\n","import { lazy, Suspense, useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router\";\nimport { ToastContainer } from \"react-toastify\";\nimport { useDispatch, useSelector } from \"react-redux\";\n//=== static components\nimport Navigation from \"./Navigation/Navigation\";\n//=== styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport authOperations from \"./redux/auth/auth-operations\";\nimport { getAllContact } from \"./redux/contacts/contacts-selectors\";\nimport ContactContainer from \"./components/ContactContainer/ContactContainer\";\nimport PrivateRoute from \"./components/PrivateRoute/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute/PublicRoute\";\n\n//=== dinamic components\nconst HomePage = lazy(() => import(\"./views/HomePage/HomePage\"));\nconst Login = lazy(() => import(\"./views/Login/Login\"));\nconst Register = lazy(() => import(\"./views/Register/Register\"));\n\nfunction App() {\n  const dispatch = useDispatch();\n  const contact = useSelector(getAllContact);\n\n  console.log(contact.length === 0);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Navigation />\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <HomePage />\n          </PublicRoute>\n          <PublicRoute path=\"/login\" redirectTo=\"/contacts\" restricted>\n            <Login />\n          </PublicRoute>\n\n          <PublicRoute path=\"/register\" restricted>\n            <Register />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <ContactContainer />\n          </PrivateRoute>\n\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./contacts-actions\";\n\nconst entities = createReducer([], {\n  [actions.fetchContactSuccess]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (state, { payload }) =>\n    state.find(\n      (contact) =>\n        contact.name === payload.name || contact.number === payload.number\n    )\n      ? state\n      : [...state, payload],\n  [actions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [actions.fetchContactRequest]: () => true,\n  [actions.fetchContactSuccess]: () => false,\n  [actions.fetchContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [actions.fetchContactRequest]: (_, { payload }) => payload,\n  [actions.fetchContactRequest]: () => null,\n});\n\nexport default combineReducers({\n  filter,\n  entities,\n  isLoading,\n  error,\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport authOperations from \"./auth-operations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled]: (state, { payload }) => {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.login.fulfilled]: (state, { payload }) => {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logout.fulfilled]: (state) => {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled]: (state, { payload }) => {\n      state.user = { ...payload };\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport contactReducers from \"./contacts/contacts-reducer\";\nimport authReducers from \"./auth/auth-reducer\";\n\nconst contactPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(contactPersistConfig, authReducers),\n    contacts: contactReducers,\n  },\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n    logger,\n  ],\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","import { createTheme } from \"@mui/material/styles\";\n\nlet theme = createTheme({\n  palette: {\n    type: \"light\",\n    primary: {\n      light: \"#1769aa\",\n      main: \"#2196f3\",\n      dark: \"#4dabf5\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ab003c\",\n      main: \"#f50057\",\n      dark: \"#f73378\",\n      contrastText: \"#000\",\n    },\n  },\n});\n\nexport const componentTheme = createTheme(theme, {\n  components: {\n    MuiAppBar: {\n      styleOverrides: {\n        root: {\n          color: theme.palette.primary.contrastText,\n        },\n      },\n    },\n\n    MuiTypography: {\n      styleOverrides: {\n        root: {\n          color: theme.palette.primary.light,\n        },\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          color: theme.palette.primary.contrastText,\n        },\n      },\n    },\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { ThemeProvider } from \"@mui/material\";\nimport { componentTheme } from \"./utils/themes\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={componentTheme}>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <BrowserRouter>\n            <App />\n          </BrowserRouter>\n        </PersistGate>\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","const getIsLoggedIn = (state) => state.auth.isLoggedIn;\nconst getUserName = (state) => state.auth.user.name;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n};\n\nexport default authSelectors;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = createAsyncThunk(\"auth/register\", async (credentials) => {\n  try {\n    const { data } = await axios.post(\"/users/signup\", credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {}\n});\n\nconst login = createAsyncThunk(\"auth/login\", async (credentials) => {\n  try {\n    const { data } = await axios.post(\"/users/login\", credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {}\n});\n\nconst logout = createAsyncThunk(\"auth/logout\", async () => {\n  try {\n    const { data } = await axios.post(\"/users/logout\");\n    token.unset();\n    return data;\n  } catch (error) {}\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistToken = state.auth.token;\n    if (persistToken === null) {\n      console.log(\"Exit\");\n      return thunkAPI.rejectWithValue(5);\n    }\n    token.set(persistToken);\n\n    try {\n      const { data } = await axios.get(\"/users/current\");\n      return data;\n    } catch (error) {}\n  }\n);\n\nexport default {\n  register,\n  login,\n  logout,\n  fetchCurrentUser,\n};\n","import { Typography } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\n\nconst ContactsMenu = () => {\n  const isLogged = useSelector(authSelectors.getIsLoggedIn);\n\n  return (\n    <Link to={`/contacts`}>\n      {isLogged ? (\n        <Typography component=\"span\" color=\"#fff\" sx={{ mr: 8 }}>\n          {\" \"}\n          My contacts\n        </Typography>\n      ) : (\n        <Typography> Open your Phonebook</Typography>\n      )}\n    </Link>\n  );\n};\n\nexport default ContactsMenu;\n"],"sourceRoot":""}