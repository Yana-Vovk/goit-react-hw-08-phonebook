{"version":3,"sources":["views/Register/Register.js"],"names":["Register","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","isLogged","useSelector","authSelectors","getIsLoggedIn","handleChange","target","value","sx","mt","display","justifyContent","maxWidth","onSubmit","e","preventDefault","authOperations","register","type","label","onChange","variant","width"],"mappings":"6OAuGeA,UAhGE,WACf,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,cACXC,EAAWC,YAAYC,IAAcC,eAQrCC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUb,EAAoB,EAApBA,KAAMc,EAAc,EAAdA,MACtC,OAAQd,GACN,IAAK,OACH,OAAOC,EAAQa,GACjB,IAAK,QACH,OAAOX,EAASW,GAClB,IAAK,WACH,OAAOT,EAAYS,GACrB,QACE,SAcN,OACE,cAAC,IAAD,CACEC,GAAI,CACFC,GAAI,EACJC,QAAS,OACTC,eAAgB,UAJpB,UAOIV,GACA,cAAC,IAAD,CAAWO,GAAI,CAAEI,SAAU,KAA3B,SACE,uBAAMC,SApBO,SAACC,GACpBA,EAAEC,iBAEW,KAATtB,GAAyB,KAAVE,GAA6B,KAAbE,GACjCE,EAASiB,IAAeC,SAAS,CAAExB,OAAME,QAAOE,cAtBlDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAoCN,UACE,cAAC,IAAD,CACEL,KAAK,OACLyB,KAAK,OACLC,MAAM,OACNZ,MAAOd,EACP2B,SAAUf,EACVgB,QAAQ,WACRb,GAAI,CAAEc,MAAO,KAGf,cAAC,IAAD,CACE7B,KAAK,QACLyB,KAAK,QACLC,MAAM,QACNZ,MAAOZ,EACPyB,SAAUf,EACVgB,QAAQ,WACRb,GAAI,CAAEc,MAAO,KAGf,cAAC,IAAD,CACE7B,KAAK,WACLyB,KAAK,WACLC,MAAM,WACNZ,MAAOV,EACPuB,SAAUf,EACVgB,QAAQ,WACRb,GAAI,CAAEc,MAAO,KAGf,cAAC,IAAD,CACEJ,KAAK,SACLL,SAAU,SAACC,GACTA,EAAEC,kBAEJM,QAAQ,YACRb,GAAI,CACFC,GAAI,GAPR","file":"static/js/5.686b8144.chunk.js","sourcesContent":["import { TextField, Container, Button, FormGroup } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport authSelectors from \"../../redux/auth/auth-selectors\";\n\nconst Register = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const isLogged = useSelector(authSelectors.getIsLoggedIn);\n\n  const reset = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case \"name\":\n        return setName(value);\n      case \"email\":\n        return setEmail(value);\n      case \"password\":\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (name !== \"\" && email !== \"\" && password !== \"\") {\n      dispatch(authOperations.register({ name, email, password }));\n    }\n\n    reset();\n  };\n\n  return (\n    <Container\n      sx={{\n        mt: 2,\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      {!isLogged && (\n        <FormGroup sx={{ maxWidth: 320 }}>\n          <form onSubmit={handleSubmit}>\n            <TextField\n              name=\"name\"\n              type=\"text\"\n              label=\"Name\"\n              value={name}\n              onChange={handleChange}\n              variant=\"standard\"\n              sx={{ width: 1 }}\n            />\n\n            <TextField\n              name=\"email\"\n              type=\"email\"\n              label=\"Email\"\n              value={email}\n              onChange={handleChange}\n              variant=\"standard\"\n              sx={{ width: 1 }}\n            />\n\n            <TextField\n              name=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              value={password}\n              onChange={handleChange}\n              variant=\"standard\"\n              sx={{ width: 1 }}\n            />\n\n            <Button\n              type=\"submit\"\n              onSubmit={(e) => {\n                e.preventDefault();\n              }}\n              variant=\"contained\"\n              sx={{\n                mt: 2,\n              }}\n            >\n              Register\n            </Button>\n          </form>\n        </FormGroup>\n      )}\n    </Container>\n  );\n};\n\nexport default Register;\n"],"sourceRoot":""}